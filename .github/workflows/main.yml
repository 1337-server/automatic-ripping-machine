# This is a basic workflow to help you get started with Actions

name: flake8

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the v2.5.0_dev branch
  push:
    branches: [ v2_devel ]
  pull_request:
    branches: [ v2_devel ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
  
jobs:
  flake8_py3:
    runs-on: ubuntu-latest
    steps:
      - name: Setup Python
        uses: actions/setup-python@v1
        with:
          python-version: 3.7
      - name: Checkout PyTorch
        uses: actions/checkout@master
      - name: Install flake8
        run: pip install flake8
      - name: Run flake8
        uses: suo/flake8-github-action@releases/v1
        with:
          checkName: 'flake8_py3'   # NOTE: this needs to be the same as the job name
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
      - name: "Upload coverage to Codecov"
        uses: codecov/codecov-action@v1.0.5
        with:
          fail_ci_if_error: false


# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
      with:
        submodules: true
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
    - name: Fix dependencies
      run: |
        sudo apt-get install libgnutls28-dev libcurl4-openssl-dev libssl-dev
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: execute py script # run the run.py to get the latest data
      run: |
       python arm/runui.py
